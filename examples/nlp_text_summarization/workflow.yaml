apiVersion: flowfunc.dev/v1beta1
kind: Pipeline
metadata:
  name: text-analysis-sentiment-pipeline
  version: "1.0.0"
  description: "A pipeline to tokenize text, extract keywords, generate summaries, analyze sentiment, and aggregate results."
spec:
  default_module: examples.nlp_text_summarization.main

  options:
    scope: "nlp"

  params:
    text:
      description: "A list of input texts to process. Each text will be processed individually."
      type: "list"
      value:
        - "The movie was excellent! The performances were outstanding, and the plot was captivating."
        - "The movie was bad and boring. I found it dull and slow with no gripping moments."
        - "An alright film with a good sense of humor but lacking depth in character development."

  steps:
    - name: "tokenize_text"
      description: "Tokenizes input text into words, removes stopwords and non-alphabetic characters."
      params:
        text: "{{ params.text }}"
      produces: "tokens"

    - name: "extract_keywords"
      description: "Extracts the most common keywords from tokenized text."
      consumes:
        tokens: "{{ steps.tokenize_text.produces.tokens }}"
      produces: "keywords"

    - name: "generate_summary"
      description: "Generates a summary from the original text using extracted keywords."
      params:
        text: "{{ params.text }}"
      consumes:
        keywords: "{{ steps.extract_keywords.produces.keywords }}"
      produces: "summary"
      options:
        mapspec: "text[i], keywords[i] -> summary[i]"

    - name: "analyze_sentiment"
      description: "Analyzes the sentiment of the generated summary."
      consumes:
        summary: "{{ steps.generate_summary.produces.summary }}"
      produces: "sentiment"
      options:
        mapspec: "summary[i] -> sentiment[i]"

    - name: "aggregate_summarization"
      description: "Aggregates the sentiment analysis results."
      consumes:
        sentiment: "{{ steps.analyze_sentiment.produces.sentiment }}"
      produces: "result_summary"
      options:
        map_mode: "none"

  artifacts:
    "final_sentiment.json": "{{ steps.aggregate_summarization.produces.result_summary }}"